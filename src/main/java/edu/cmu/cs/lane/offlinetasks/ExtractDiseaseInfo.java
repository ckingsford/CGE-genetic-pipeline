package edu.cmu.cs.lane.offlinetasks;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class ExtractDiseaseInfo {
	public static void main(String[] args) throws IOException {
		String inputFilePath = args[0];
		String outputFilePath = args[1];
		File inputFile = new File(inputFilePath);
		File outputFile = new File(outputFilePath);
		if (!outputFile.exists()) {
			outputFile.createNewFile();
		}
		BufferedWriter bufOut = null;
		BufferedReader bufIn = null;
		try {
			bufIn = new BufferedReader(new FileReader(inputFile));
			bufOut = new BufferedWriter(new FileWriter(outputFile));

			DiseaseInfo diseaseInfo;
			String line = bufIn.readLine(); // ignore the first line

			/*
			 * Mapping tsv file to tab file:
			 * 
			 * diseaseId INT NOT NULL AUTO_INCREMENT - (this is autogenerated
			 * you dont have to do anything)
			 * 
			 * diseaseName TEXT, (fill it with disease Name)
			 * 
			 * diseaseDesc TEXT, ( keep it "" empty string if we dont have that
			 * info or keep it same as diseaseName for now)
			 * 
			 * otherNames TEXT, (map it to Alternate names)
			 * 
			 * externalIds => pharmgkb:PA128406954"
			 * 
			 * source TEXT, (source -> pharmgkb)
			 */
			while ((line = bufIn.readLine()) != null) {
				String[] items = line.split("\t");
				diseaseInfo = new DiseaseInfo(getItemValue(items, 1),
						getItemValue(items, 1), getItemValue(items, 2),
						getItemValue(items, 0));
				bufOut.write(diseaseInfo.toString() + "\n");
			}
		} finally {
			if (bufOut != null) {
				bufOut.close();
			}
			if (bufIn != null) {
				bufIn.close();
			}
		}
	}

	private static String getItemValue(String[] items, int index) {
		if (index >= items.length || index < 0) {
			return null;
		}
		return items[index];
	}
}

class DiseaseInfo {
	private static int count = 0;
	final int id = count++;

	private String diseaseName;
	private String diseaseDesc;
	private String otherNames;
	private String source;
	private String externalIds;

	DiseaseInfo(String name, String desc, String alias, String paId) {
		this.diseaseName = name;
		this.diseaseDesc = desc;
		this.otherNames = alias;
		this.source = "pharmgkb";
		this.externalIds = "pharmgkb:" + paId;
	}

	@Override
	public String toString() {
		return id + "\t" + this.diseaseName + "\t" + this.diseaseDesc + "\t"
				+ this.otherNames + "\t" + this.externalIds + "\t"
				+ this.source + "\t";
	}
}